# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

name: $(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    includesource: true
    versioningScheme: byPrereleaseNumber
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'custom'
    custom: 'pack'
    arguments: '$(Build.SourcesDirectory)/**/*.csproj --include-source -c=Release -p:NuspecFile=$(Build.SourcesDirectory)/**/*.nuspec'
- task: DotNetCoreCLI@2
  displayName: Push to Artifacts
  inputs:
    command: 'push'
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    #publishVstsFeed: '4b129dab-3902-4dc2-982b-4a5104d95ff1/ff4d7d7d-5282-4fd6-a4c3-21115eea9e05'
    publishVstsFeed: 'DevOpsTestOrg/test-analyzer'